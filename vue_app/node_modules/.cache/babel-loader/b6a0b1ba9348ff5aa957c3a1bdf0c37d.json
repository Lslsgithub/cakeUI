{"remainingRequest":"E:\\WEB前端资料\\个人项目\\cake_vueui\\vue_app\\node_modules\\babel-loader\\lib\\index.js!E:\\WEB前端资料\\个人项目\\cake_vueui\\vue_app\\src\\main.js","dependencies":[{"path":"E:\\WEB前端资料\\个人项目\\cake_vueui\\vue_app\\src\\main.js","mtime":1541422098000},{"path":"E:\\WEB前端资料\\个人项目\\cake_vueui\\vue_app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535162686000},{"path":"E:\\WEB前端资料\\个人项目\\cake_vueui\\vue_app\\node_modules\\babel-loader\\lib\\index.js","mtime":1534881726000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router'; //单个引入mintui库的组件————按需引入\n//1.引入组件mintui库的组件\n\n/*import {Lazyload,Button,Header,Swipe, SwipeItem} from 'mint-ui'\r\n//2.注册到当前项目中\r\nVue.component(Header.name,Header)\r\nVue.component(Swipe.name, Swipe);\r\nVue.component(SwipeItem.name, SwipeItem);\r\nVue.component(Button.name,Button)\r\n/!*图片懒加载*!/\r\nVue.use(Lazyload)*/\n\n/*引入mintui库的组件————完整引入*/\n\nimport MintUI from \"mint-ui\";\nVue.use(MintUI); //发送ajax请求的组件————全部引入\n\nimport VueResource from 'vue-resource';\nVue.use(VueResource);\nimport 'mint-ui/lib/style.css';\nVue.config.productionTip = false; //加载mui的css文件\n\nimport './lib/mui/css/mui.css';\nimport './lib/mui/css/icons-extra.css'; //定义过滤器————转换时间格式\n\nVue.filter(\"dataFilter\", function (val) {\n  var date = new Date(val);\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var d = date.getDate();\n  var hour = date.getHours();\n  var minutes = date.getMinutes();\n  var seconds = date.getSeconds();\n  return \"\".concat(year, \"-\").concat(month, \"-\").concat(d, \" \").concat(hour, \":\").concat(minutes, \":\").concat(seconds);\n}); //配置VueResource服务器的根目录\n\nVue.http.options.root = \"http://127.0.0.1:3000/\";\n/* 简化：var url=\"comment?id=\"+this.id+\"&pno=\"+this.pageIndex+\"&pageSize=\"+this.pageSize*/\n//修改请求头————post\n//Vue.http.options.emulateJSON=true\n\n/*创建Vuex的实例对象*/\n\n/*1.引入Vuex*/\n\nimport Vuex from 'vuex';\n/*2.注册组件*/\n\nVue.use(Vuex);\n/*3.创建Vuex的实例对象*/\n\nvar store = new Vuex.Store({\n  state: {\n    count: 0\n  },\n  //保存共享数据————购物车中商品的数量\n  //修改数据\n  mutations: {\n    /*可增加一个参数————控制增加的数量*/\n    add: function add(state, c) {\n      //state参数共享的数据\n      if (state.count == 999) return;\n      state.count += c;\n    },\n    sub: function sub(state) {\n      if (state.count == 1) return;\n      state.count--;\n    }\n  },\n  //获取数据\n  getters: {\n    optCount: function optCount(state) {\n      return state.count; //返回共享的数据\n    }\n  }\n});\nnew Vue({\n  router: router,\n  render: function render(h) {\n    return h(App);\n  },\n\n  /*4.将Vuex注册到Vue的实例对象中*/\n  store: store\n}).$mount('#app');",{"version":3,"sources":["src\\main.js"],"names":["Vue","App","router","MintUI","use","VueResource","config","productionTip","filter","val","date","Date","year","getFullYear","month","getMonth","d","getDate","hour","getHours","minutes","getMinutes","seconds","getSeconds","http","options","root","Vuex","store","Store","state","count","mutations","add","c","sub","getters","optCount","render","h","$mount"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;AACA;;AACA;;;;;;;;;AASA;;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACAH,IAAII,GAAJ,CAAQD,MAAR,E,CAEA;;AACA,OAAOE,WAAP,MAAyB,cAAzB;AACAL,IAAII,GAAJ,CAAQC,WAAR;AAEA,OAAM,uBAAN;AACAL,IAAIM,MAAJ,CAAWC,aAAX,GAA2B,KAA3B,C,CAEA;;AACA,OAAO,uBAAP;AACA,OAAO,+BAAP,C,CAEA;;AACAP,IAAIQ,MAAJ,CAAW,YAAX,EAAwB,UAAUC,GAAV,EAAe;AACrC,MAAIC,OAAO,IAAIC,IAAJ,CAASF,GAAT,CAAX;AACA,MAAIG,OAAKF,KAAKG,WAAL,EAAT;AACA,MAAIC,QAAMJ,KAAKK,QAAL,KAAgB,CAA1B;AACA,MAAIC,IAAEN,KAAKO,OAAL,EAAN;AACA,MAAIC,OAAKR,KAAKS,QAAL,EAAT;AACA,MAAIC,UAAQV,KAAKW,UAAL,EAAZ;AACA,MAAIC,UAAQZ,KAAKa,UAAL,EAAZ;AACE,mBAAUX,IAAV,cAAkBE,KAAlB,cAA2BE,CAA3B,cAAgCE,IAAhC,cAAwCE,OAAxC,cAAmDE,OAAnD;AACH,CATD,E,CAWA;;AACAtB,IAAIwB,IAAJ,CAASC,OAAT,CAAiBC,IAAjB,GAAsB,wBAAtB;AACA;AACA;AACA;;AAEA;;AACA;;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA;;AACA3B,IAAII,GAAJ,CAAQuB,IAAR;AACA;;AACA,IAAIC,QAAM,IAAID,KAAKE,KAAT,CAAe;AACrBC,SAAM;AAACC,WAAM;AAAP,GADe;AACJ;AACjB;AACAC,aAAU;AACR;AACAC,OAFQ,eAEJH,KAFI,EAEEI,CAFF,EAEI;AAAE;AACZ,UAAGJ,MAAMC,KAAN,IAAa,GAAhB,EACE;AACAD,YAAMC,KAAN,IAAaG,CAAb;AACH,KANO;AAORC,OAPQ,eAOJL,KAPI,EAOE;AACN,UAAGA,MAAMC,KAAN,IAAa,CAAhB,EACI;AACJD,YAAMC,KAAN;AACH;AAXO,GAHW;AAgBrB;AACAK,WAAQ;AACNC,YADM,oBACGP,KADH,EACS;AACb,aAAOA,MAAMC,KAAb,CADa,CACM;AACpB;AAHK;AAjBa,CAAf,CAAV;AAyBA,IAAI/B,GAAJ,CAAQ;AACNE,gBADM;AAENoC,UAAQ;AAAA,WAAKC,EAAEtC,GAAF,CAAL;AAAA,GAFF;;AAGR;AACE2B;AAJM,CAAR,EAKGY,MALH,CAKU,MALV","sourceRoot":"E:\\WEB前端资料\\个人项目\\cake_vueui\\vue_app","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\n\r\n//单个引入mintui库的组件————按需引入\r\n//1.引入组件mintui库的组件\r\n/*import {Lazyload,Button,Header,Swipe, SwipeItem} from 'mint-ui'\r\n//2.注册到当前项目中\r\nVue.component(Header.name,Header)\r\nVue.component(Swipe.name, Swipe);\r\nVue.component(SwipeItem.name, SwipeItem);\r\nVue.component(Button.name,Button)\r\n/!*图片懒加载*!/\r\nVue.use(Lazyload)*/\r\n\r\n/*引入mintui库的组件————完整引入*/\r\nimport MintUI from \"mint-ui\"\r\nVue.use(MintUI)\r\n\r\n//发送ajax请求的组件————全部引入\r\nimport VueResource  from 'vue-resource'\r\nVue.use(VueResource)\r\n\r\nimport'mint-ui/lib/style.css'\r\nVue.config.productionTip = false\r\n\r\n//加载mui的css文件\r\nimport './lib/mui/css/mui.css'\r\nimport './lib/mui/css/icons-extra.css'\r\n\r\n//定义过滤器————转换时间格式\r\nVue.filter(\"dataFilter\",function (val) {\r\n  var date = new Date(val)\r\n  var year=date.getFullYear()\r\n  var month=date.getMonth()+1\r\n  var d=date.getDate()\r\n  var hour=date.getHours()\r\n  var minutes=date.getMinutes()\r\n  var seconds=date.getSeconds()\r\n    return `${year}-${month}-${d} ${hour}:${minutes}:${seconds}`\r\n})\r\n\r\n//配置VueResource服务器的根目录\r\nVue.http.options.root=\"http://127.0.0.1:3000/\"\r\n/* 简化：var url=\"comment?id=\"+this.id+\"&pno=\"+this.pageIndex+\"&pageSize=\"+this.pageSize*/\r\n//修改请求头————post\r\n//Vue.http.options.emulateJSON=true\r\n\r\n/*创建Vuex的实例对象*/\r\n/*1.引入Vuex*/\r\nimport Vuex from 'vuex'\r\n/*2.注册组件*/\r\nVue.use(Vuex)\r\n/*3.创建Vuex的实例对象*/\r\nvar store=new Vuex.Store({\r\n    state:{count:0}, //保存共享数据————购物车中商品的数量\r\n    //修改数据\r\n    mutations:{\r\n      /*可增加一个参数————控制增加的数量*/\r\n      add(state,c){ //state参数共享的数据\r\n        if(state.count==999)\r\n          return\r\n          state.count+=c\r\n      },\r\n      sub(state){\r\n          if(state.count==1)\r\n              return\r\n          state.count--\r\n      }\r\n    },\r\n    //获取数据\r\n    getters:{\r\n      optCount(state){\r\n        return state.count //返回共享的数据\r\n      }\r\n    }\r\n});\r\n\r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App),\r\n/*4.将Vuex注册到Vue的实例对象中*/\r\n  store\r\n}).$mount('#app')\r\n"]}]}