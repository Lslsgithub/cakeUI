{"remainingRequest":"E:\\myProject\\vue_app\\node_modules\\babel-loader\\lib\\index.js!E:\\myProject\\vue_app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\myProject\\vue_app\\src\\components\\tabbar\\shopping.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\myProject\\vue_app\\src\\components\\tabbar\\shopping.vue","mtime":1548142848928},{"path":"E:\\myProject\\vue_app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535162686000},{"path":"E:\\myProject\\vue_app\\node_modules\\babel-loader\\lib\\index.js","mtime":1534881726000},{"path":"E:\\myProject\\vue_app\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/*引入子组件*/\nimport swiper from \"../sub/swiper.vue\";\nimport { Toast } from \"mint-ui\";\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      //banner图列表\n      shop: [],\n      //购物车列表\n      timer: \"\" //定时器\n\n    };\n  },\n  methods: {\n    /*轮播图*/\n    getImage: function getImage() {\n      var _this = this;\n\n      this.$http.get(\"imagelist\").then(function (res) {\n        _this.list = res.body;\n      });\n    },\n\n    /*加载购物车*/\n    getShopping: function getShopping() {\n      var _this2 = this;\n\n      var uid = this.$store.getters.uid; //获取uid\n\n      this.$http.get(\"shop?uid=\" + uid).then(function (res) {\n        _this2.shop = res.body;\n      });\n    },\n    updateCart: function updateCart(pid, uid, count) {\n      var _this3 = this;\n\n      this.$http.get(\"updateCart?pid=\" + pid + \"&uid=\" + uid + \"&count=\" + count).then(function (res) {\n        if (res.body.code == 0) {\n          Toast({\n            message: res.body.msg,\n            position: 'center',\n            duration: 1500\n          });\n\n          _this3.getShopping();\n        } else if (res.body.code == 1) {\n          return;\n        } else {\n          Toast({\n            message: res.body.msg,\n            position: 'center',\n            duration: 1500\n          });\n        }\n      });\n    },\n\n    /*数量*/\n    goodSub: function goodSub(cid) {\n      var uid = this.$store.getters.uid;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.shop[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var i = _step.value;\n\n          if (cid == i.cid) {\n            i.count--;\n            this.updateCart(i.pid, uid, i.count);\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    },\n    goodsAdd: function goodsAdd(cid) {\n      var uid = this.$store.getters.uid;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.shop[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var i = _step2.value;\n\n          if (cid == i.cid) {\n            i.count++;\n            this.updateCart(i.pid, uid, i.count);\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    },\n    isLogin: function isLogin() {\n      var _this4 = this;\n\n      //验证是否登录\n      var state = this.$store.getters.isLogin; //获取vuex中的登录状态\n\n      if (state) {\n        this.getShopping();\n      } else {\n        Toast({\n          message: '您还未登录，无法加载购物车,即将加载登录页面',\n          position: 'center',\n          duration: 2000\n        });\n        this.timer = setTimeout(function () {\n          _this4.$router.push('/home/Login');\n        }, 2000);\n      }\n    }\n  },\n  computed: {\n    /*合计*/\n    total: function total() {\n      var sum = 0;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.shop[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var i = _step3.value;\n          sum += i.price * i.count;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return sum;\n    }\n  },\n  created: function created() {\n    this.getImage();\n    this.isLogin();\n  },\n  destroyed: function destroyed() {\n    //关闭页面时，清除定时器\n    clearTimeout(this.timer);\n  },\n\n  /*注册子组件*/\n  components: {\n    \"swiper-box\": swiper\n  }\n};",{"version":3,"sources":["shopping.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"app-shopping\">\r\n        <!--轮播组件-->\r\n        <div class=\"mui-card\">\r\n            <div class=\"mui-card-content\">\r\n                <div class=\"mui-card-content-inner\">\r\n                    <!--父组件的值传给子组件的props:[\"list\"]-->\r\n                    <swiper-box :list=\"list\"></swiper-box>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!--商品列表-->\r\n        <div class=\"mui-card\">\r\n            <div class=\"mui-card-header\">商品列表</div>\r\n            <div class=\"mui-card-content\">\r\n                <div class=\"mui-card-content-inner\">\r\n                    <!--左侧图片    右侧文字-->\r\n                    <ul class=\"mui-table-view\">\r\n                        <li class=\"mui-table-view-cell mui-media\" v-for=\"item in shop\">\r\n                            <a href=\"javascript:;\">\r\n                                <img class=\"mui-media-object mui-pull-left\" :src=\"item.imgUrl\">\r\n                                <div class=\"mui-media-body\">\r\n                                    {{item.pname}}\r\n                                    <p class='mui-ellipsis'>\r\n                                        <span class=\"price\">￥{{item.price}}</span>\r\n                                        <span class=\"count\">\r\n                                            <div class=\"mui-numbox\" data-numbox-min='1' data-numbox-max='999'>\r\n                                                <button class=\"mui-btn mui-btn-numbox-minus\" type=\"button\"\r\n                                                        @click=\"goodSub(item.cid)\">-</button>\r\n                                                <input id=\"test\" class=\"mui-input-numbox\" type=\"number\"\r\n                                                       :value=\"item.count\"/>\r\n                                                <button class=\"mui-btn mui-btn-numbox-plus\" type=\"button\"\r\n                                                        @click=\"goodsAdd(item.cid)\">+</button>\r\n                                            </div>\r\n                                        </span>\r\n                                    </p>\r\n                                </div>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                    <hr/>\r\n                    <div>\r\n                        合计：<span>{{total}}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    /*引入子组件*/\r\n    import swiper from \"../sub/swiper.vue\"\r\n    import {Toast} from \"mint-ui\"\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                list: [],//banner图列表\r\n                shop: [],//购物车列表\r\n                timer:\"\" ,//定时器\r\n            }\r\n        },\r\n        methods: {\r\n            /*轮播图*/\r\n            getImage() {\r\n                this.$http.get(\"imagelist\")\r\n                    .then(res => {\r\n                        this.list = res.body\r\n                    })\r\n            },\r\n            /*加载购物车*/\r\n            getShopping() {\r\n                var uid=this.$store.getters.uid //获取uid\r\n                this.$http.get(\"shop?uid=\" + uid)\r\n                    .then(res => {\r\n                        this.shop = res.body\r\n                    })\r\n            },\r\n            updateCart(pid,uid,count){\r\n                this.$http.get(\"updateCart?pid=\"+pid+\"&uid=\"+uid+\"&count=\"+count)\r\n                    .then(res=>{\r\n                        if(res.body.code==0){\r\n                            Toast({\r\n                                message:res.body.msg,\r\n                                position:'center',\r\n                                duration:1500\r\n                            })\r\n                            this.getShopping()\r\n                        } else if(res.body.code==1){\r\n                            return\r\n                        }else{\r\n                            Toast({\r\n                                message:res.body.msg,\r\n                                position:'center',\r\n                                duration:1500\r\n                            })\r\n                        }\r\n                    })\r\n            },\r\n            /*数量*/\r\n            goodSub(cid) {\r\n                var uid=this.$store.getters.uid\r\n                for (var i of this.shop) {\r\n                    if (cid == i.cid) {\r\n                            i.count--\r\n                            this.updateCart(i.pid,uid,i.count)\r\n                        break\r\n                    }\r\n                }\r\n            },\r\n            goodsAdd(cid) {\r\n                var uid=this.$store.getters.uid\r\n                for (var i of this.shop) {\r\n                    if (cid == i.cid) {\r\n                            i.count++\r\n                        this.updateCart(i.pid,uid,i.count)\r\n                            break\r\n                    }\r\n                }\r\n            },\r\n            isLogin() {//验证是否登录\r\n                var state = this.$store.getters.isLogin //获取vuex中的登录状态\r\n                if (state) {\r\n                    this.getShopping()\r\n                } else {\r\n                    Toast({\r\n                        message: '您还未登录，无法加载购物车,即将加载登录页面',\r\n                        position: 'center',\r\n                        duration: 2000\r\n                    })\r\n                    this.timer=setTimeout(()=>{\r\n                        this.$router.push('/home/Login')\r\n                    },2000)\r\n                }\r\n            }\r\n        },\r\n        computed: {\r\n            /*合计*/\r\n            total() {\r\n                var sum = 0\r\n                for (var i of this.shop) {\r\n                    sum += i.price * i.count;\r\n                }\r\n                return sum\r\n            }\r\n        },\r\n        created() {\r\n            this.getImage()\r\n            this.isLogin()\r\n        },\r\n        destroyed(){ //关闭页面时，清除定时器\r\n            clearTimeout(this.timer)\r\n        },\r\n        /*注册子组件*/\r\n        components: {\r\n            \"swiper-box\": swiper\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .mui-ellipsis {\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n</style>"],"sourceRoot":"src\\components\\tabbar"}]}